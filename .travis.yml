#######################################################################################################
# This .travis.yml is freely inspired from https://github.com/boostorg/hana/blob/master/.travis.yml   #
# to ensure proper configuration of the different build environments (especially compilers)           #
#######################################################################################################

language: c
sudo: false

# disable the default submodule logic
git:
  submodules: false

env:
  # Workaround for https://github.com/travis-ci/travis-ci/issues/4681
  matrix:
    - TRAVIS_EMPTY_JOB_WORKAROUND=true

addons:
  apt:
    packages:
      - libc6-i386

matrix:
  exclude:
    - env: TRAVIS_EMPTY_JOB_WORKAROUND=true

  include:
    ##########################################################################
    # Build with the main configuration on all the supported compilers
    ##########################################################################
    # GCC
    - os: linux
      env: COMPILER=gcc
      compiler: gcc

    # arm-none-eabi-gcc
    - os: linux
      env: COMPILER=arm-none-eabi-gcc
      compiler: gcc

    # arm-linux-gnueabihf-gcc
    - os: linux
      env: COMPILER=arm-linux-gnueabihf-gcc
      compiler: gcc

    # Clang
    - os: linux
      compiler: clang

before_install:
  # Use sed to replace the git SSH URL with the public URL, then init and update submodules
  - sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
  - git submodule update --init --recursive

install:
############################################################################
# All the dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
############################################################################
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

  ############################################################################
  # Setup default versions and override compiler if needed
  ############################################################################
  - if [[ "${COMPILER}" != "" ]]; then export CC=${COMPILER}; fi

  ############################################################################
  # Install the ARM cross-compilers
  ############################################################################$

  # If we are using gcc but not the standard one
  - |
    if [[ "${CC}" != gcc ]] && [[ "${COMPILER}" != "" ]]; then
      GCC_DIR=${DEPS_DIR}/${COMPILER}
      # mkdir ${GCC_DIR}
      # Checking built directory
      if [[ -z "$(ls -A ${GCC_DIR})" ]]; then
        if [[ "${CC}" == arm-none-eabi-gcc ]]; then
          GCC_URL="https://releases.linaro.org/14.04/components/toolchain/binaries/gcc-linaro-arm-none-eabi-4.8-2014.04_linux.tar.bz2"
          travis_retry wget --quiet ${GCC_URL}
          tar xjf gcc-linaro-arm-none-eabi-*_linux.tar.bz2 -C ${GCC_DIR}
          export PATH=$PATH:${GCC_DIR}/bin
          echo ${PATH}
          ${COMPILER} --version;
        fi
        if [[ "${CC}" == arm-linux-gnueabihf-gcc ]]; then
          GCC_URL="https://releases.linaro.org/14.04/components/toolchain/binaries/gcc-linaro-arm-linux-gnueabihf-4.8-2014.04_linux.tar.bz2"
          travis_retry wget --quiet ${GCC_URL}
          tar xjf gcc-linaro-arm-linux-gnueabihf-*_linux.tar.bz2 -C ${GCC_DIR}
          export PATH=$PATH:${GCC_DIR}/bin
          echo ${PATH}
          ${COMPILER} --version;
        fi
      fi
    fi

before_script:
  ############################################################################
  # Go back to the root of the project and setup the build directory
  ############################################################################
  - cd ${TRAVIS_BUILD_DIR}
  - cmake ./

script: 
  - make all
  - ctest --output-on-failure

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps/arm-none-gnueabihf-gcc
    - ${TRAVIS_BUILD_DIR}/deps/arm-none-eabi-gcc
